generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Appointment {
  id                  String      @id @default(uuid())
  status              String      @db.VarChar(45)
  appointment_time    DateTime    @db.Time(0)
  date_of_appointment DateTime    @db.Date
  created_at          DateTime    @default(now())
  patient_id          String
  doctor_id           String
  Doctor              Doctor      @relation(fields: [doctor_id], references: [id])
  Patient             Patient     @relation(fields: [patient_id], references: [id])
  Treatment           Treatment[]

  @@index([doctor_id], map: "Appointment_doctor_id_fkey")
  @@index([patient_id], map: "Appointment_patient_id_fkey")
}

model Doctor {
  id          String        @id @default(uuid())
  firstname   String
  middlename  String
  lastname    String
  gender      String        @db.VarChar(45)
  dob         DateTime      @db.Date
  hire_date   DateTime      @db.Date
  Appointment Appointment[]
  Records     Records?
  User        User?
}

model Patient {
  id                  String        @id @default(uuid())
  firstname           String
  middlename          String
  lastname            String
  address             String        @db.LongText
  age                 Int
  sex                 String        @db.VarChar(20)
  civil_status        String        @db.VarChar(20)
  dob                 DateTime      @db.Date
  mobile_no           String        @db.VarChar(20)
  emergency_contact   String        @db.VarChar(20)
  emergency_mobile_no String
  medical_history     String        @db.LongText
  Appointment         Appointment[]
  Records             Records?
  User                User?
}

model Records {
  id           String  @id @default(uuid())
  amount_paid  Float   @db.Float
  balance      Float   @db.Float
  commission   Float   @db.Float
  patient_id   String  @unique
  doctor_id    String  @unique
  Doctor       Doctor  @relation(fields: [doctor_id], references: [id])
  Patient      Patient @relation(fields: [patient_id], references: [id])
}

model Treatment {
  id             String      @id @default(uuid())
  treatment      String      @db.VarChar(50)
  cost           Int
  appointment_id String
  Appointment    Appointment @relation(fields: [appointment_id], references: [id])

  @@index([appointment_id], map: "Treatment_appointment_id_fkey")
}

model User {
  id         String   @id @default(uuid())
  username   String   @db.Text
  password   String   @db.Text
  firstname  String   @db.Text
  lastname   String   @db.Text
  middlename String   @db.Text
  user_level String   @db.Text
  email      String   @db.Text
  patient_id String?  @unique
  doctor_id  String?  @unique
  Doctor     Doctor?  @relation(fields: [doctor_id], references: [id])
  Patient    Patient? @relation(fields: [patient_id], references: [id])
}
